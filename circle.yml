general:
  branches:
    ignore:
      - gh-pages

machine:
  timezone:
    Asia/Shanghai
  environment:
    PATH: $PATH:$HOME/.cargo/bin
    RUST_NIGHTLY_DATE: "2018-04-06"
    RUST_CLIPPY_VERSION: "0.0.192"
    # Parallel gcc jobs for building Snappy and RocksDB.
    # See: https://github.com/hibari/hibari-brick-rs/issues/3
    CI_NUM_JOBS: 4

dependencies:
  post:
    - sudo apt update
    - sudo apt install curl file gcc git make openssh-client
    - sudo apt install libgflags-dev llvm-3.9-dev libclang-3.9-dev clang-3.9
    # Delete .gitconfig to prevent "cargo install" and "cargo build" from
    # failing when pulling the registry info (crates.io-index).
    # See https://github.com/rust-lang-ja/rust-by-example-ja/issues/38#issuecomment-238214915
    # NOTE: Assuming .gitconfig only has a rewrite rule for https://github.com
    - cat $HOME/.gitconfig; rm $HOME/.gitconfig
    # Install Rust
    - curl https://sh.rustup.rs -sSf | sh -s -- -y --no-modify-path
    - rustup self update
    - rustup update stable
    - rustup install beta; rustup update beta
    - rustup install nightly-${RUST_NIGHTLY_DATE}; rustup update nightly-${RUST_NIGHTLY_DATE}
    - cargo +nightly-${RUST_NIGHTLY_DATE} install clippy --vers $RUST_CLIPPY_VERSION --force
    - rustc +stable --version --verbose
    - cargo +stable --version --verbose
    - rustc +beta --version --verbose
    - cargo +beta --version --verbose
    - rustc +nightly-${RUST_NIGHTLY_DATE} --version --verbose
    - cargo +nightly-${RUST_NIGHTLY_DATE} --version --verbose
    - cargo +nightly-${RUST_NIGHTLY_DATE} clippy --version
  cache_directories:
    - "~/.cargo"

test:
  override:
    - cargo +nightly-${RUST_NIGHTLY_DATE} clean
    - cargo +nightly-${RUST_NIGHTLY_DATE} clippy --jobs $CI_NUM_JOBS:
        timeout: 900
    - cargo +stable clean
    - cargo +stable test --jobs $CI_NUM_JOBS --release:
        timeout: 900
    - cargo +stable run --release --example simple
    - cargo +beta clean
    - cargo +beta test --jobs $CI_NUM_JOBS --release:
        timeout: 900
    - cargo +beta run --release --example simple
